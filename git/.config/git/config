[core]
	commitGraph = true

[pager]
	difftool = true
	diff = "diff-so-fancy | less --tabs=4 -RFX"

[init]
	defaultBranch = master

[user]
	useConfigOnly = true

[feature]
	experimental = true
	manyFiles = true

[alias]
	ai = add -i
	b = branch
	ca = commit --amend
	ci = commit
	co = checkout
	cob = checkout -b
	lg = log --color --graph --abbrev-commit --pretty=simple-oneline
	rci = commit --amend --reuse-message HEAD
	squash = rebase --interactive --autosquash @{upstream}
	st = status -sb
	todo = grep -Ee '\\bTODO:?\\b'
	fixme = grep -Ee '\\bFIX(ME)?:?\\b'
	com = "!git checkout $(git default-branch)"
	skip = update-index --skip-worktree
	unskip = update-index --no-skip-worktree
	default-branch = "!git symbolic-ref --short refs/remotes/origin/HEAD | sed 's|^origin/||'"
	cleanup = "!git branch --format=\"%(if:notequals=*)%(HEAD)%(then)%(if:notequals=${1:-$(git default-branch)})%(refname:lstrip=2)%(then)%(refname:lstrip=2)%(end)%(end)\" --merged $(git default-branch) | xargs -rpxL1 git branch -d"

[pretty]
	simple-oneline = "%C(yellow)%h%C(auto)%d %s [%C(green)%aN <%aE>%C(reset)] (%C(blue)%ar%C(reset))"

[merge]
	conflictstyle = diff3

[branch]
	autoSetupRebase = always
[push]
	default = current
	followTags = true
	gpgSign = if-asked
[pull]
	rebase = true
	twohead = ort
[merge]
	ff = false
[rebase]
	autostash = true
	autosquash = true
[fetch]
	prune = true
[help]
	autocorrect = 5

# Automatically sign all tags and commits
[tag]
	forceSignAnnotated = true
	sort = version:refname
[versionsort]
	suffix = ""
	suffix = "-rc"
	suffix = "-pre"
[commit]
	gpgSign = true
	verbose = true
	cleanup = scissors

[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true

[rerere]
	enabled = false

[diff]
	indentHeuristic = true
	algorithm = histogram
	mnemonicPrefix = true
	tool = difftastic

[diff "markdown"]
	xfuncname = "^(#+\\s+.*)$"

[difftool]
	prompt = false

[difftool "difftastic"]
	cmd = difft "$LOCAL" "$REMOTE"

[color]
	ui = true

[color.diff]
	old = magenta
	new = blue

[color.diff-highlight]
	oldNormal = "blue"
	oldHighlight = "blue reverse"
	newNormal = "yellow"
	newHighlight = "yellow reverse"

[pack]
	useSparse = true

[sendemail]
	annotate = true
	confirm = always
	thread = true
	supersscc = self

[gpg]
	; format = ssh

[gpg.ssh]
	defaultKeyCommand = "ssh-add -L"

# vim: ft=gitconfig noexpandtab sw=8
