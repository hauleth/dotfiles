#!/bin/bash

set -eo pipefail

USAGE=$(cat <<EOF
 | [-d|--define] <identity> <name> <email>
 | [-p|--print] <identity>
 | [-r|--remove] <identity>
 | [-l|--list]
 | [-R|--list-raw]
 | [-h|--help]
 | <identity>

Define identity globally:
  git -d private "My Name Suername" me@example.com
  git -d company "My Name Suername" me@your-company.com

Use identity in your git repository:
  cd your_repository
  git identity private

List current identity:
  cd your_repository
  git identity private
 
Print current identity:
  cd your_repository
  git identity

EOF)

error () {
  local message="$1"
  (>&2 echo "$message")
  exit 1
}

lookup () {
  local identity="$1"
  local key="$2"

  git config "identity.$identity.$key" || error "Unknown identity: $identity"
}

format_identity () {
  local identity="$1"

  echo "[$identity] $(format_raw_identity "$identity")"
}

format_raw_identity () {
  local identity="$1"

  echo "$(lookup "$identity" name) <$(lookup "$identity" email)>"
}

use_identity () {
  local identity="$1"
  local name
  local email
  name="$(lookup "$identity" name)"
  email="$(lookup "$identity" email)"

  echo "Using identity: $(format_identity "$identity")"
  git config user.identity "$identity"
  git config user.name "$name"
  git config user.email "$email"
}

list_raw_identities () {
  git config --get-regexp '^identity\.' | cut -d. -f2 | sort -u
}

list_identities () {
  local identities

  identities="$(list_raw_identities)"

  echo "Available identities:"
  for identity in $identities; do
    format_identity "$identity"
  done
}

print_raw_identity () {
  local identity="$1"

  if [ "x$identity" = "x" ]; then
    identity="$(git config user.identity)"
  fi

  format_raw_identity "$identity"
}

print_current_identity () {
  local identity

  identity="$(git config user.identity || echo "")"
  if [ "$identity" ]; then
    echo "Current identity: $(format_identity "$identity")"
  else
    (>&2 echo "=================================================")
    (>&2 echo -e "\033[0;31mNO IDENTITY SET\033[0m")
    (>&2 echo "Your name: $(git config user.name)")
    (>&2 echo "Your email: $(git config user.email)")
    (>&2 echo "=================================================")
    (>&2 echo "How to use this tool")
    (>&2 echo "${USAGE}")
    (>&2 echo "=================================================")
    exit 1
  fi
}

define_identity () {
  local identity="$1"
  local name="$2"
  local email="$3"

  git config --global identity."$identity".name "$name"
  git config --global identity."$identity".email "$email"
  echo "Created $(format_identity "$identity")"
}

remove_identity () {
  local identity="$1"
  local formated_identity

  formated_identity="$(format_identity "$identity")"

  git config --global --remove-section identity."$identity"
  echo "Removed $formated_identity"
}

IDENTITY="$1"

usage () {
  echo "${USAGE}"
}

check_arguments () {
  if [ "$1" -lt "$2" ]; then
    usage
    exit 1
  fi
}

case "$IDENTITY" in
  "") print_current_identity ;;

  -l|--list) list_identities ;;

  -R|--list-raw) list_raw_identities ;;

  -d|--define)
    shift
    check_arguments $# 3
    define_identity "$1" "$2" "$3"
    ;;

  -r|--remove)
    shift
    check_arguments $# 1
    remove_identity "$1"
    ;;

  -p|--print)
    shift
    print_raw_identity "$1"
    ;;

  -h|--help)
    shift
    usage
    ;;

  *) use_identity "$IDENTITY" ;;
esac
