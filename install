#!/bin/bash

TMP="$(pwd)/.tmp"

if [ ! -d "$TMP" ]; then
  mkdir "$TMP"
fi

fetch() {
  config="$1"
  out="$2"

  typ=$($JQ -r ".type" <<< "$config")
  url=$($JQ -r ".url" <<< "$config")
  build=$($JQ -r ".build // \"\"" <<< "$config")
  echo -e "\t$out\t\t$typ"
  "${typ}-fetch" "$out" "$url" > /dev/null
  if [ -n "$build" ]; then
    if [ -d "$out" ]; then
      pushd "$out"
      sh -c "$build"
      popd
    else
      sh -c "$build" -- "$out"
    fi
  fi
}

curl-fetch() {
  curl -Lo "$1" "$2"
}

git-fetch() {
  out="$1"
  tmp_path="$TMP/git/$out"
  mkdir -p "$(dirname "$tmp_path")"
  if [ -d "$out" ]; then
    pushd "$out"
    git pull
    popd
  else
    git clone --separate-git-dir="$tmp_path" "$2" "$out"
  fi
}

JQ="$(which jq)"
PACKAGES="$(cat packages.json)"

if [ ! -x "$JQ" ]; then
  echo 'Install jq before running'
  echo 'http://stedolan.github.io/jq/'
  echo ''
  echo 'In future installer will fetch it for you, but for now it is only requirement'
  exit 1
fi

for path in $($JQ -r '. | keys[]' <<< "$PACKAGES")
do
  current=$($JQ ".[\"$path\"]" <<< "$PACKAGES")
  for repo in $($JQ -r ". | keys[]" <<< "$current")
  do
    fetch "$($JQ ".[\"$repo\"]" <<< "$current")" "$path/$repo" &
  done
done

for job in $(jobs -p)
do
  wait $job
done
